{
    "root": true,
    "ignorePatterns": ["**/*"],
    "parser": "@typescript-eslint/parser",
    "plugins": ["@nx", "import", "unused-imports", "sonarjs", "sonar", "prettier"],
    "extends": ["plugin:prettier/recommended", "plugin:sonar/base", "plugin:sonar/recommended"],
    "overrides": [
        {
            "files": ["*.ts"],
            "extends": [
                "plugin:@nx/typescript",
                "plugin:sonarjs/recommended",
                "plugin:@angular-eslint/recommended",
                "plugin:@angular-eslint/template/process-inline-templates"
            ],
            "parserOptions": {
                "sourceType": "module",
                "tsconfigRootDir": "./",
                "project": ["tsconfig(.*)?.json"]
            },
            "rules": {
                "@nx/enforce-module-boundaries": [
                    "error",
                    {
                        "enforceBuildableLibDependency": true,
                        "allow": [],
                        "depConstraints": [
                            {
                                "sourceTag": "*",
                                "onlyDependOnLibsWithTags": ["*"]
                            }
                        ]
                    }
                ],
                "import/first": "error",
                "import/newline-after-import": "error",
                "import/no-duplicates": "error",
                "unused-imports/no-unused-imports": "error",
                "@typescript-eslint/no-inferrable-types": "off",
                "@typescript-eslint/no-unused-vars": ["error", { "args": "none" }],
                "@typescript-eslint/no-empty-function": "off",
                "@typescript-eslint/no-explicit-any": "error",
                "@typescript-eslint/no-non-null-assertion": "off",

                "@typescript-eslint/explicit-member-accessibility": [
                    "error",
                    {
                        "accessibility": "explicit",
                        "overrides": {
                            "accessors": "explicit",
                            "constructors": "off",
                            "methods": "explicit",
                            "properties": "explicit",
                            "parameterProperties": "explicit"
                        }
                    }
                ],
                "@typescript-eslint/typedef": [
                    "error",
                    {
                        "arrayDestructuring": false,
                        "arrowParameter": false,
                        "memberVariableDeclaration": false,
                        "objectDestructuring": false,
                        "parameter": true,
                        "propertyDeclaration": true,
                        "variableDeclaration": false,
                        "variableDeclarationIgnoreFunction": true
                    }
                ],
                "@typescript-eslint/member-ordering": "off",
                "@typescript-eslint/strict-boolean-expressions": [
                    "error",
                    {
                        "allowNullableBoolean": true,
                        "allowString": true,
                        "allowNumber": true,
                        "allowNullableNumber": true,
                        "allowNullableEnum": true
                    }
                ],
                "sonar/updated-loop-counter": "off",
                "sonarjs/no-duplicate-string": "off",
                "sonarjs/no-identical-functions": "off",
                "sonarjs/cognitive-complexity": "off",
                "sonarjs/no-redundant-boolean": "off",
                "sonarjs/no-nested-template-literals": "off",
                "sonarjs/prefer-immediate-return": "off",
                "sonarjs/no-collapsible-if": "off",
                "sonarjs/no-small-switch": "off",
                "sonar/for-in": "off",
                "prettier/prettier": ["error", { "endOfLine": "auto" }],
                "sonar/function-name": [
                    "error",
                    {
                        "format": "^_?[a-zA-Z]+_?[a-zA-Z0-9]*\\$?$"
                    }
                ],
                "@angular-eslint/no-output-native": "warn",
                "@angular-eslint/no-input-rename": "off",
                "@angular-eslint/no-output-on-prefix": "off"
            }
        },
        {
            "files": ["*.html"],
            "extends": ["plugin:@angular-eslint/template/recommended"],
            "rules": {
                "prettier/prettier": ["off", {}, { "usePrettierrc": true }],
                "sonar/destructuring-assignment-syntax": "off",
                "@angular-eslint/template/eqeqeq": [
                    "off",
                    {
                        "allowNullOrUndefined": true
                    }
                ]
            }
        },
        {
            "files": ["*.js", "*.jsx"],
            "extends": ["plugin:@nx/javascript"],
            "rules": {}
        },
        {
            "files": ["*.spec.ts", "*.spec.tsx", "*.spec.js", "*.spec.jsx"],
            "env": {
                "jest": true
            },
            "rules": {}
        }
    ]
}
