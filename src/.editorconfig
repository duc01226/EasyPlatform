# This file is the root file and need to copy into src folder for copy to docker file

# Version: 2.1.0 (Using https://semver.org/)
# Version: 2.1.0 (Using https://semver.org/)
# Updated: 2021-03-03
# See https://github.com/RehanSaeed/EditorConfig/releases for release notes.
# See https://github.com/RehanSaeed/EditorConfig for updates to this file.
# See http://EditorConfig.org for more information about .editorconfig files.

##########################################
# Common Settings
##########################################

# This file is the top-most EditorConfig file
root = true

# All Files
[*]
charset = utf-8
indent_style = space
indent_size = 4
insert_final_newline = true
trim_trailing_whitespace = true

##########################################
# File Extension Settings
##########################################

# Visual Studio Solution Files
[*.sln]
indent_style = tab

# Visual Studio XML Project Files
[*.{csproj,vbproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML Configuration Files
[*.{xml,config,props,targets,nuspec,resx,ruleset,vsixmanifest,vsct}]
indent_size = 2

# JSON Files
[*.{json,json5,webmanifest}]
indent_size = 2

# YAML Files
[*.{yml,yaml}]
indent_size = 2

# Markdown Files
[*.md]
max_line_length = off
trim_trailing_whitespace = false

# Web Files
[*.{htm,html,js,jsm,ts,tsx,css,sass,scss,less,svg,vue}]
indent_size = 2

# Batch Files
[*.{cmd,bat}]
end_of_line = crlf

# Bash Files
[*.sh]
end_of_line = lf

# Makefiles
[Makefile]
indent_style = tab

##########################################
# Default .NET Code Style Severities
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/configuration-options#scope
##########################################

[*.{cs,csx,cake,vb,vbx}]
# Default Severity for all .NET Code Style rules below
dotnet_analyzer_diagnostic.severity = error

##########################################
# Language Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/language-rules
##########################################

# .NET Style Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/language-rules#net-style-rules
[*.{cs,csx,cake,vb,vbx}]
# "this." and "Me." qualifiers
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion
# Language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error
# Modifier preferences
dotnet_style_require_accessibility_modifiers = always:error
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:error
visual_basic_preferred_modifier_order = Partial,Default,Private,Protected,Public,Friend,NotOverridable,Overridable,MustOverrIDE,Overloads,OverrIDEs,MustInherit,NotInheritable,Static,Shared,Shadows,ReadOnly,WriteOnly,Dim,Const,WithEvents,WIDEning,Narrowing,Custom,Async:error
dotnet_style_readonly_field = true:none
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:error
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:error
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:error
dotnet_style_parentheses_in_other_operators = always_for_clarity:error
# Expression-level preferences
dotnet_style_object_initializer = true:error
dotnet_style_collection_initializer = true:error
dotnet_style_explicit_tuple_names = true:error
dotnet_style_prefer_inferred_tuple_names = true:error
dotnet_style_prefer_inferred_anonymous_type_member_names = true:error
dotnet_style_prefer_auto_properties = true:none
dotnet_style_prefer_conditional_expression_over_assignment = false:error
dotnet_style_prefer_conditional_expression_over_return = false:error
dotnet_style_prefer_compound_assignment = true:error
dotnet_style_prefer_simplified_interpolation = true:error
dotnet_style_prefer_simplified_boolean_expressions = true:error
# Null-checking preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:error
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error
# File header preferences
# file_header_template = <copyright file="{fileName}" company="PROJECT-AUTHOR">\nÂ© PROJECT-AUTHOR\n</copyright>
# If you use StyleCop, you'll need to disable SA1636: File header copyright text should match.
# dotnet_diagnostic.SA1636.severity = none
# Undocumented
dotnet_style_operator_placement_when_wrapping = end_of_line

# C# Style Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/language-rules#c-style-rules
[*.{cs,csx,cake}]
# 'var' preferences
csharp_style_var_for_built_in_types = true:error
csharp_style_var_when_type_is_apparent = true:error
csharp_style_var_elsewhere = true:error
# Expression-bodied members
csharp_style_expression_bodied_constructors = false:error
csharp_style_expression_bodied_operators = true:none
csharp_style_expression_bodied_properties = when_on_single_line:none
csharp_style_expression_bodied_indexers = true:error
csharp_style_expression_bodied_accessors = true:none
csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion
csharp_style_expression_bodied_local_functions = true:suggestion
# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:error
csharp_style_pattern_matching_over_as_with_null_check = true:error
csharp_style_prefer_switch_expression = true:error
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_not_pattern = true:error
# Expression-level preferences
csharp_style_inlined_variable_declaration = true:error
csharp_prefer_simple_default_expression = true:error
csharp_style_pattern_local_over_anonymous_function = true:error
csharp_style_deconstructed_variable_declaration = true:error
csharp_style_prefer_index_operator = true:error
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:error
# "Null" checking preferences
csharp_style_throw_expression = true:error
csharp_style_conditional_delegate_call = true:error
# Code block preferences
csharp_prefer_braces = when_multiline:suggestion
csharp_prefer_simple_using_statement = true:suggestion
# Modifier preferences
csharp_prefer_static_local_function = true:error

##########################################
# Formatting Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules
##########################################

# .NET formatting rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#net-formatting-rules
[*.{cs,csx,cake,vb,vbx}]
# Organize using directives
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# C# formatting rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#c-formatting-rules
[*.{cs,csx,cake}]
# Newline options
# https://docs.microsoft.com/visualstudio/IDE/editorconfig-formatting-conventions#new-line-options
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_between_query_expression_clauses = true
# Indentation options
# https://docs.microsoft.com/visualstudio/IDE/editorconfig-formatting-conventions#indentation-options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = no_change
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false
# Spacing options
# https://docs.microsoft.com/visualstudio/IDE/editorconfig-formatting-conventions#spacing-options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
# Wrap options
# https://docs.microsoft.com/visualstudio/IDE/editorconfig-formatting-conventions#wrap-options
# csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

##########################################
# .NET Naming Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/naming-rules
##########################################

[*.{cs,csx,cake,vb,vbx}]

##########################################
# Styles
##########################################

# camel_case_style - Define the camelCase style
dotnet_naming_style.camel_case_style.capitalization = camel_case
# pascal_case_style - Define the PascalCase style
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
# first_upper_style - The first character must start with an upper-case character
dotnet_naming_style.first_upper_style.capitalization = first_word_upper
# prefix_interface_with_i_style - Interfaces must be PascalCase and the first character of an interface must be an 'I'
dotnet_naming_style.prefix_interface_with_i_style.capitalization = pascal_case
dotnet_naming_style.prefix_interface_with_i_style.required_prefix = I
# prefix_type_parameters_with_t_style - Generic Type Parameters must be PascalCase and the first character must be a 'T'
dotnet_naming_style.prefix_type_parameters_with_t_style.capitalization = pascal_case
dotnet_naming_style.prefix_type_parameters_with_t_style.required_prefix = T
# disallowed_style - Anything that has this style applied is marked as disallowed
dotnet_naming_style.disallowed_style.capitalization = pascal_case
dotnet_naming_style.disallowed_style.required_prefix =
dotnet_naming_style.disallowed_style.required_suffix =
# internal_error_style - This style should never occur... if it does, it indicates a bug in file or in the parser using the file
dotnet_naming_style.internal_error_style.capitalization = pascal_case
dotnet_naming_style.internal_error_style.required_prefix = ____INTERNAL_ERROR____
dotnet_naming_style.internal_error_style.required_suffix = ____INTERNAL_ERROR____

##########################################
# .NET Design GuIDEline Field Naming Rules
# Naming rules for fields follow the .NET Framework design guIDElines
# https://docs.microsoft.com/dotnet/standard/design-guIDElines/index
##########################################

# All public/protected/protected_internal constant fields must be PascalCase
# https://docs.microsoft.com/dotnet/standard/design-guIDElines/field
dotnet_naming_symbols.public_protected_constant_fields_group.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_protected_constant_fields_group.required_modifiers = const
dotnet_naming_symbols.public_protected_constant_fields_group.applicable_kinds = field
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.symbols = public_protected_constant_fields_group
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.style = disallowed_style
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.severity = error

# All public/protected/protected_internal static readonly fields must be PascalCase
# https://docs.microsoft.com/dotnet/standard/design-guIDElines/field
dotnet_naming_symbols.public_protected_static_readonly_fields_group.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_protected_static_readonly_fields_group.required_modifiers = static, readonly
dotnet_naming_symbols.public_protected_static_readonly_fields_group.applicable_kinds = field
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.symbols = public_protected_static_readonly_fields_group
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.style = disallowed_style
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.severity = error

# No other public/protected/protected_internal fields are allowed
# https://docs.microsoft.com/dotnet/standard/design-guIDElines/field
dotnet_naming_symbols.other_public_protected_fields_group.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.other_public_protected_fields_group.applicable_kinds = field
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.symbols = other_public_protected_fields_group
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.style = disallowed_style
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.severity = error

##########################################
# StyleCop Field Naming Rules
# Naming rules for fields follow the StyleCop analyzers
# This does not override any rules using disallowed_style above
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers
##########################################

# All constant fields must be PascalCase
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1303.md
dotnet_naming_symbols.stylecop_constant_fields_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected, private
dotnet_naming_symbols.stylecop_constant_fields_group.required_modifiers = const
dotnet_naming_symbols.stylecop_constant_fields_group.applicable_kinds = field
dotnet_naming_rule.stylecop_constant_fields_must_be_pascal_case_rule.symbols = stylecop_constant_fields_group
dotnet_naming_rule.stylecop_constant_fields_must_be_pascal_case_rule.style = disallowed_style
dotnet_naming_rule.stylecop_constant_fields_must_be_pascal_case_rule.severity = error

# All static readonly fields must be PascalCase
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1311.md
dotnet_naming_symbols.stylecop_static_readonly_fields_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected, private
dotnet_naming_symbols.stylecop_static_readonly_fields_group.required_modifiers = static, readonly
dotnet_naming_symbols.stylecop_static_readonly_fields_group.applicable_kinds = field
dotnet_naming_rule.stylecop_static_readonly_fields_must_be_pascal_case_rule.symbols = stylecop_static_readonly_fields_group
dotnet_naming_rule.stylecop_static_readonly_fields_must_be_pascal_case_rule.style = disallowed_style
dotnet_naming_rule.stylecop_static_readonly_fields_must_be_pascal_case_rule.severity = error

# No non-private instance fields are allowed
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1401.md
dotnet_naming_symbols.stylecop_fields_must_be_private_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected
dotnet_naming_symbols.stylecop_fields_must_be_private_group.applicable_kinds = field
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.symbols = stylecop_fields_must_be_private_group
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.style = disallowed_style
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.severity = error

# Private fields must be camelCase
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1306.md
dotnet_naming_symbols.stylecop_private_fields_group.applicable_accessibilities = private
dotnet_naming_symbols.stylecop_private_fields_group.applicable_kinds = field
dotnet_naming_rule.stylecop_private_fields_must_be_camel_case_rule.symbols = stylecop_private_fields_group
dotnet_naming_rule.stylecop_private_fields_must_be_camel_case_rule.style = camel_case_style
dotnet_naming_rule.stylecop_private_fields_must_be_camel_case_rule.severity = suggestion

# Local variables must be camelCase
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1312.md
dotnet_naming_symbols.stylecop_local_fields_group.applicable_accessibilities = local
dotnet_naming_symbols.stylecop_local_fields_group.applicable_kinds = local
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.symbols = stylecop_local_fields_group
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.style = camel_case_style
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.severity = silent

# This rule should never fire.  However, it's included for at least two purposes:
# First, it helps to understand, reason about, and root-case certain types of issues, such as bugs in .editorconfig parsers.
# Second, it helps to raise immediate awareness if a new field type is added (as occurred recently in C#).
dotnet_naming_symbols.sanity_check_uncovered_field_case_group.applicable_accessibilities = *
dotnet_naming_symbols.sanity_check_uncovered_field_case_group.applicable_kinds = field
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.symbols = sanity_check_uncovered_field_case_group
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.style = internal_error_style
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.severity = error


##########################################
# Other Naming Rules
##########################################

# All of the following must be PascalCase:
# - Namespaces
#   https://docs.microsoft.com/dotnet/standard/design-guIDElines/names-of-namespaces
#   https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1300.md
# - Classes and Enumerations
#   https://docs.microsoft.com/dotnet/standard/design-guIDElines/names-of-classes-structs-and-interfaces
#   https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1300.md
# - Delegates
#   https://docs.microsoft.com/dotnet/standard/design-guIDElines/names-of-classes-structs-and-interfaces#names-of-common-types
# - Constructors, Properties, Events, Methods
#   https://docs.microsoft.com/dotnet/standard/design-guIDElines/names-of-type-members
dotnet_naming_symbols.element_group.applicable_kinds = namespace, class, enum, struct, delegate, event, method, property
dotnet_naming_rule.element_rule.symbols = element_group
dotnet_naming_rule.element_rule.style = disallowed_style
dotnet_naming_rule.element_rule.severity = error

# Interfaces use PascalCase and are prefixed with uppercase 'I'
# https://docs.microsoft.com/dotnet/standard/design-guIDElines/names-of-classes-structs-and-interfaces
dotnet_naming_symbols.interface_group.applicable_kinds = interface
dotnet_naming_rule.interface_rule.symbols = interface_group
dotnet_naming_rule.interface_rule.style = prefix_interface_with_i_style
dotnet_naming_rule.interface_rule.severity = error

# Generics Type Parameters use PascalCase and are prefixed with uppercase 'T'
# https://docs.microsoft.com/dotnet/standard/design-guIDElines/names-of-classes-structs-and-interfaces
dotnet_naming_symbols.type_parameter_group.applicable_kinds = type_parameter
dotnet_naming_rule.type_parameter_rule.symbols = type_parameter_group
dotnet_naming_rule.type_parameter_rule.style = prefix_type_parameters_with_t_style
dotnet_naming_rule.type_parameter_rule.severity = error

# Function parameters use camelCase
# https://docs.microsoft.com/dotnet/standard/design-guIDElines/naming-parameters
dotnet_naming_symbols.parameters_group.applicable_kinds = parameter
dotnet_naming_rule.parameters_rule.symbols = parameters_group
dotnet_naming_rule.parameters_rule.style = camel_case_style
dotnet_naming_rule.parameters_rule.severity = error

##########################################
# Unnecessary Code Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/unnecessary-code-rules
##########################################

# .NET Unnecessary code rules
[*.{cs,csx,cake,vb,vbx}]
dotnet_code_quality_unused_parameters = all:none
dotnet_remove_unnecessary_suppression_exclusions = none:error
tab_width = 4
end_of_line = crlf

# C# Unnecessary code rules
[*.{cs,csx,cake}]
csharp_style_unused_value_expression_statement_preference = unused_local_variable:none
csharp_style_unused_value_assignment_preference = unused_local_variable:none

dotnet_diagnostic.IDE0003.severity = error
dotnet_diagnostic.IDE0005.severity = suggestion
dotnet_diagnostic.IDE0010.severity = suggestion
dotnet_diagnostic.IDE0011.severity = none
dotnet_diagnostic.IDE0039.severity = error
dotnet_diagnostic.IDE0040.severity = none
dotnet_diagnostic.IDE0044.severity = error
dotnet_diagnostic.IDE0050.severity = error
dotnet_diagnostic.IDE0051.severity = error
dotnet_diagnostic.IDE0053.severity = none
dotnet_diagnostic.IDE0056.severity = suggestion
dotnet_diagnostic.IDE0057.severity = suggestion
dotnet_diagnostic.IDE0059.severity = error
dotnet_diagnostic.IDE0060.severity = warning
dotnet_diagnostic.IDE0061.severity = suggestion
dotnet_diagnostic.IDE0072.severity = suggestion
dotnet_diagnostic.IDE0090.severity = suggestion
dotnet_diagnostic.IDE0037.severity = error
dotnet_diagnostic.IDE0106.severity = error
dotnet_diagnostic.IDE0160.severity = none
dotnet_diagnostic.IDE0130.severity = error
dotnet_diagnostic.IDE0058.severity = none
dotnet_diagnostic.IDE0078.severity = suggestion
dotnet_diagnostic.IDE0063.severity = suggestion
dotnet_diagnostic.IDE0022.severity = suggestion
dotnet_diagnostic.IDE0052.severity = error
dotnet_diagnostic.IDE0240.severity = error
dotnet_diagnostic.IDE0074.severity = error
# IDE0200: Remove unnecessary lambda expression
dotnet_diagnostic.IDE0200.severity = suggestion
dotnet_diagnostic.IDE0270.severity = suggestion
dotnet_diagnostic.IDE0251.severity = none
dotnet_diagnostic.IDE0290.severity = suggestion
dotnet_diagnostic.IDE0100.severity = suggestion
dotnet_diagnostic.IDE0240.severity = suggestion
dotnet_diagnostic.IDE0066.severity = suggestion
dotnet_diagnostic.IDE0071.severity = error

dotnet_diagnostic.SA1101.severity = error
dotnet_diagnostic.SA1413.severity = error
dotnet_diagnostic.SA1200.severity = error
dotnet_diagnostic.SA1208.severity = error
dotnet_diagnostic.SA1516.severity = error
dotnet_diagnostic.SA1402.severity = error
dotnet_diagnostic.SA1633.severity = error
dotnet_diagnostic.SA1005.severity = error
dotnet_diagnostic.SA1013.severity = error
dotnet_diagnostic.SA1012.severity = error
dotnet_diagnostic.SA1401.severity = error
dotnet_diagnostic.SA1515.severity = error
dotnet_diagnostic.SA1210.severity = error
dotnet_diagnostic.SA1649.severity = error
dotnet_diagnostic.SA1309.severity = error
dotnet_diagnostic.SA1127.severity = error

dotnet_diagnostic.CA1068.severity = suggestion
dotnet_diagnostic.CA1304.severity = suggestion
dotnet_diagnostic.CA1305.severity = suggestion
dotnet_diagnostic.CA1822.severity = suggestion
dotnet_diagnostic.CA2254.severity = error
dotnet_diagnostic.CA1848.severity = none
dotnet_diagnostic.CA1707.severity = none
dotnet_diagnostic.CA2201.severity = none
dotnet_diagnostic.CA1725.severity = error
dotnet_diagnostic.CA1720.severity = suggestion
dotnet_diagnostic.CA1716.severity = suggestion
dotnet_diagnostic.CA1310.severity = suggestion
dotnet_diagnostic.CA1051.severity = suggestion
dotnet_diagnostic.CA1805.severity = none
dotnet_diagnostic.CA1845.severity = warning
dotnet_diagnostic.CA1847.severity = error
dotnet_diagnostic.CA2253.severity = error
dotnet_diagnostic.CA1041.severity = warning
dotnet_diagnostic.CA1309.severity = warning
dotnet_diagnostic.CA2208.severity = error
dotnet_diagnostic.CA1711.severity = suggestion
dotnet_diagnostic.CA1727.severity = error
dotnet_diagnostic.CA1000.severity = suggestion
dotnet_diagnostic.CA1806.severity = error
dotnet_diagnostic.CA1826.severity = suggestion
dotnet_diagnostic.CA1842.severity = suggestion
dotnet_diagnostic.CA1708.severity = suggestion
dotnet_diagnostic.CA5350.severity = warning
dotnet_diagnostic.CA1416.severity = error
dotnet_diagnostic.CA1846.severity = error
dotnet_diagnostic.CA1710.severity = suggestion
dotnet_diagnostic.CA2200.severity = error
dotnet_diagnostic.CA1852.severity = error
dotnet_diagnostic.CA1311.severity = suggestion
dotnet_diagnostic.CA1854.severity = suggestion
dotnet_diagnostic.CA1860.severity = suggestion
dotnet_diagnostic.CA1861.severity = suggestion
dotnet_diagnostic.CA1862.severity = suggestion
dotnet_diagnostic.CA1863.severity = suggestion
dotnet_diagnostic.CA1869.severity = suggestion
dotnet_diagnostic.CA2263.severity = suggestion

dotnet_diagnostic.CS0628.severity = error
dotnet_diagnostic.CS4014.severity = error
dotnet_diagnostic.CS0108.severity = error
dotnet_diagnostic.CS8524.severity = suggestion
dotnet_diagnostic.CS8602.severity = error
dotnet_diagnostic.CS8604.severity = error
dotnet_diagnostic.CS8601.severity = error
dotnet_diagnostic.CS8603.severity = error

dotnet_diagnostic.CS1998.severity = none

dotnet_diagnostic.EF1001.severity = suggestion

# SYSLIB1045: Convert to 'GeneratedRegexAttribute'.
dotnet_diagnostic.SYSLIB1045.severity = none

# ASP0014: Suggest using top level route registrations
dotnet_diagnostic.ASP0014.severity = none

##########################################
# License
##########################################
# The following applies as to the .editorconfig file ONLY, and is
# included below for reference, per the requirements of the license
# corresponding to this .editorconfig file.
# See: https://github.com/RehanSaeed/EditorConfig
#
# MIT License
#
# Copyright (c) 2017-2019 Muhammad Rehan Saeed
# Copyright (c) 2019 Henry Gabryjelski
#
# Permission is hereby granted, free of charge, to any
# person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the
# Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute,
# sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject
# to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
##########################################

# S112: General exceptions should never be thrown
dotnet_diagnostic.S112.severity = none

# S1125: Boolean literals should not be redundant
dotnet_diagnostic.S1125.severity = none

# S3925: "ISerializable" should be implemented correctly
dotnet_diagnostic.S3925.severity = none

# S3442: "abstract" classes should not have "public" constructors
dotnet_diagnostic.S3442.severity = none

# S3358: Ternary operators should not be nested
dotnet_diagnostic.S3358.severity = suggestion

# S1118: Utility classes should not have public constructors
dotnet_diagnostic.S1118.severity = none

# S4136: Method overloads should be grouped together
dotnet_diagnostic.S4136.severity = none

# S2184: Results of integer division should not be assigned to floating point variables
dotnet_diagnostic.S2184.severity = error

# S1135: Track uses of "TODO" tags
dotnet_diagnostic.S1135.severity = warning

# S1168: Empty arrays and collections should be returned instead of null
dotnet_diagnostic.S1168.severity = none

# S3060: "is" should not be used with "this"
dotnet_diagnostic.S3060.severity = none

# S2326: Unused type parameters should be removed
dotnet_diagnostic.S2326.severity = none

# S125: Sections of code should not be commented out
dotnet_diagnostic.S125.severity = none

# S1939: Inheritance list should not be redundant
dotnet_diagnostic.S1939.severity = none

# S1117: Local variables should not shadow class fields
dotnet_diagnostic.S1117.severity = warning

# S2743: Static fields should not be used in generic types
dotnet_diagnostic.S2743.severity = error

# S3963: "static" fields should be initialized inline
dotnet_diagnostic.S3963.severity = suggestion

# S3218: Inner class members should not shadow outer class "static" or type members
dotnet_diagnostic.S3218.severity = none

# S4035: Classes implementing "IEquatable<T>" should be sealed
dotnet_diagnostic.S4035.severity = none

# S3241: Methods should not return values that are never used
dotnet_diagnostic.S3241.severity = none

# S3887: Mutable, non-private fields should not be "readonly"
dotnet_diagnostic.S3887.severity = none

# S2386: Mutable fields should not be "public static"
dotnet_diagnostic.S2386.severity = none

# S101: Types should be named in PascalCase
dotnet_diagnostic.S101.severity = none

# S5547: Cipher algorithms should be robust
dotnet_diagnostic.S5547.severity = warning

# S1075: URIs should not be hardcoded
dotnet_diagnostic.S1075.severity = none

# S1215: "GC.Collect" should not be called
dotnet_diagnostic.S1215.severity = none

# S3237: "value" parameters should be used
dotnet_diagnostic.S3237.severity = none

# S108: Nested blocks of code should not be left empty
dotnet_diagnostic.S108.severity = suggestion

# S3875: "operator==" should not be overloaded on reference types
dotnet_diagnostic.S3875.severity = none

# S3011: Reflection should not be used to increase accessibility of classes, methods, or fields
dotnet_diagnostic.S3011.severity = none

# S3928: Parameter names used into ArgumentException constructors should match an existing one
dotnet_diagnostic.S3928.severity = suggestion

# S1643: Strings should not be concatenated using '+' in a loop
dotnet_diagnostic.S1643.severity = none

# S3260: Non-derived "private" classes and records should be "sealed"
dotnet_diagnostic.S3260.severity = error

# S1123: "Obsolete" attributes should include explanations
dotnet_diagnostic.S1123.severity = warning

# S1172: Unused method parameters should be removed
dotnet_diagnostic.S1172.severity = error

# S3267: Loops should be simplified with "LINQ" expressions
dotnet_diagnostic.S3267.severity = none

# S3604: Member initializer values should not be redundant
dotnet_diagnostic.S3604.severity = none

# S1481: Unused local variables should be removed
dotnet_diagnostic.S1481.severity = error

# S3220: Method calls should not resolve ambiguously to overloads with "params"
dotnet_diagnostic.S3220.severity = suggestion

# S2234: Parameters to 'Compare' have the same names but not the same order as the method arguments
dotnet_diagnostic.S2234.severity = error

# S2328: "GetHashCode" should not reference mutable fields
dotnet_diagnostic.S2328.severity = warning

# S1206: "Equals(Object)" and "GetHashCode()" should be overridden in pairs
dotnet_diagnostic.S1206.severity = none

# S2372: Exceptions should not be thrown from property getters
dotnet_diagnostic.S2372.severity = warning

# S2365: Properties should not make collection or array copies
dotnet_diagnostic.S2365.severity = none

# S4792: Make sure that this logger's configuration is safe.
dotnet_diagnostic.S4792.severity = none

# S3330: Make sure creating this cookie without the "HttpOnly" flag is safe.
dotnet_diagnostic.S3330.severity = none

# S4507: Make sure this debug feature is deactivated before delivering the code in production.
dotnet_diagnostic.S4507.severity = none

# S5332: Using http protocol is insecure. Use https instead.
dotnet_diagnostic.S5332.severity = none

# S2245: Pseudorandom number generators (PRNGs) should not be used in secure contexts
dotnet_diagnostic.S2245.severity = none

# S6444: Pass a timeout to limit the execution time.
dotnet_diagnostic.S6444.severity = none

# S2068: Hard-coded credentials are security-sensitive
dotnet_diagnostic.S2068.severity = none

# S2092: Make sure creating this cookie without setting the 'Secure' property is safe here.
dotnet_diagnostic.S2092.severity = none

# S2436: Types and methods should not have too many generic parameters
dotnet_diagnostic.S2436.severity = none

# S2094: Remove empty class
dotnet_diagnostic.S2094.severity = none

# S1133: Remove deprecated code some day
dotnet_diagnostic.S1133.severity = warning

# S1144: Remove unused internal class
dotnet_diagnostic.S1144.severity = none

dotnet_diagnostic.S1186.severity = suggestion

dotnet_diagnostic.S2857.severity = none
dotnet_diagnostic.S6667.severity = none
dotnet_diagnostic.S6934.severity = none

dotnet_diagnostic.S6602.severity = suggestion
dotnet_diagnostic.S6603.severity = suggestion
dotnet_diagnostic.S6605.severity = suggestion
dotnet_diagnostic.S6562.severity = suggestion
dotnet_diagnostic.S6580.severity = suggestion
dotnet_diagnostic.S6608.severity = suggestion
dotnet_diagnostic.S2589.severity = suggestion
dotnet_diagnostic.S6575.severity = suggestion
dotnet_diagnostic.S2583.severity = suggestion
dotnet_diagnostic.S2139.severity = none
dotnet_diagnostic.S127.severity = none
dotnet_diagnostic.S3993.severity = none
dotnet_diagnostic.S6964.severity = suggestion
dotnet_diagnostic.S1244.severity = none
dotnet_diagnostic.S6932.severity = none
dotnet_diagnostic.S1694.severity = none
dotnet_diagnostic.S1066.severity = none

# S3878: Remove array creation and simply pass element for params parameter
dotnet_diagnostic.S3878.severity = suggestion

# CS8618: Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
dotnet_diagnostic.CS8618.severity = none

# CS8974: Converting method group to non-delegate type
dotnet_diagnostic.CS8974.severity = none

# CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
dotnet_diagnostic.CS8632.severity = none

# CLASS0001: Seal classes that do not have any virtual or abstract methods, properties, events, or indexers
dotnet_diagnostic.CLASS0001.severity = none

dotnet_diagnostic.RETURN0001.severity = none
dotnet_diagnostic.ENUM0001.severity = none
dotnet_diagnostic.ENUM0003.severity = none
dotnet_diagnostic.ASYNC0001.severity = none
dotnet_diagnostic.ASYNC0004.severity = none
dotnet_diagnostic.ASYNC0002.severity = none


dotnet_diagnostic.IDE0130.severity = warning
dotnet_diagnostic.IDE0305.severity = suggestion


resharper_arrange_type_member_modifiers_highlighting=none
